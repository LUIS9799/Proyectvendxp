<?php eval(base64_decode('
 goto OPxSp; EtR1k: ?>
;
        	if (!data.is_dir && !allow_direct_link)  $link.css('pointer-events','none');
		var $dl_link = $('<a/>').attr('href','?do=download&file='+ encodeURIComponent(data.path))
			.addClass('download').text('Descargar');
		var $delete_link = $('<a href="#" />').attr('data-file',data.path).addClass('delete').text('🗑️ Eliminar');
		var perms = [];
		if(data.is_readable) perms.push('read');
		if(data.is_writable) perms.push('write');
		if(data.is_executable) perms.push('exec');
		var $html = $('<tr />')
			.addClass(data.is_dir ? 'is_dir' : '')
			.append( $('<td class="first" />').append($link) )
			.append( $('<td/>').attr('data-sort',data.is_dir ? -1 : data.size)
				.html($('<span class="size" />').text(formatFileSize(data.size))) )
			.append( $('<td/>').attr('data-sort',data.mtime).text(formatTimestamp(data.mtime)) )
			.append( $('<td/>').text(perms.join('+')) )
			.append( $('<td/>').append($dl_link).append( data.is_deleteable ? $delete_link : '') )
		return $html;
	}
	function renderBreadcrumbs(path) {
		var base = "",
			$html = $('<div/>').append( $('<a href="#">LuisNet MainCloud</a></div>') );
		$.each(path.split('%2F'),function(k,v){
			if(v) {
				var v_as_text = decodeURIComponent(v);
				$html.append( $('<span/>').text(' ▸ ') )
					.append( $('<a/>').attr('href','#'+base+v).text(v_as_text) );
				base += v + '%2F';
			}
		});
		return $html;
	}
	function formatTimestamp(unix_timestamp) {
		var m = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
		var d = new Date(unix_timestamp*1000);
		return [m[d.getMonth()],' ',d.getDate(),', ',d.getFullYear()," ",
			(d.getHours() % 12 || 12),":",(d.getMinutes() < 10 ? '0' : '')+d.getMinutes(),
			" ",d.getHours() >= 12 ? 'PM' : 'AM'].join('');
	}
	function formatFileSize(bytes) {
		var s = ['bytes', 'KB','MB','GB','TB','PB','EB'];
		for(var pos = 0;bytes >= 1000; pos++,bytes /= 1024);
		var d = Math.round(bytes*10);
		return pos ? [parseInt(d/10),".",d%10," ",s[pos]].join('') : bytes + ' bytes';
	}
})

</script>
</head><body>
<div id="top">
   <?php  goto Gms50; OPxSp: session_start(); goto dymvY; YjPOy: function get_absolute_path($path) { $path = str_replace(array("\x2f", "\134"), DIRECTORY_SEPARATOR, $path); $parts = explode(DIRECTORY_SEPARATOR, $path); $absolutes = array(); foreach ($parts as $part) { if ("\x2e" == $part) { continue; } if ("\x2e\56" == $part) { array_pop($absolutes); } else { $absolutes[] = $part; } } return implode(DIRECTORY_SEPARATOR, $absolutes); } goto aQCDU; Tqvdk: $PASSWORD = ''; goto irutC; M1woq: $MAX_UPLOAD_SIZE = min(asBytes(ini_get("\x70\x6f\x73\x74\137\x6d\141\170\137\x73\x69\x7a\x65")), asBytes(ini_get("\x75\160\x6c\x6f\x61\x64\x5f\x6d\141\170\x5f\146\x69\x6c\x65\163\151\x7a\x65"))); goto ZlLVi; k3wFY: ?>
	function list() {
		var hashval = window.location.hash.substr(1);
		$.get('?do=list&file='+ hashval,function(data) {
			$tbody.empty();
			$('#breadcrumb').empty().html(renderBreadcrumbs(hashval));
			if(data.success) {
				$.each(data.results,function(k,v){
					$tbody.append(renderFileRow(v));
				});
				!data.results.length && $tbody.append('<tr><td class="empty" colspan=5>Esta carpeta esta vacía</td></tr>')
				data.is_writable ? $('body').removeClass('no_write') : $('body').addClass('no_write');
			} else {
				console.warn(data.error.msg);
			}
			$('#table').retablesort();
		},'json');
	}
	function renderFileRow(data) {
		var $link = $('<a class="name" />')
			.attr('href', data.is_dir ? '#' + encodeURIComponent(data.path) : './' + data.path)
			.text(data.name);
		var allow_direct_link = <?php  goto HH6lB; sR7iO: $allow_upload = true; goto qmPiY; kaMWf: function is_entry_ignored($entry, $allow_show_folders, $hidden_patterns) { if ($entry === basename(__FILE__)) { return true; } if (is_dir($entry) && !$allow_show_folders) { return true; } foreach ($hidden_patterns as $pattern) { if (fnmatch($pattern, $entry)) { return true; } } return false; } goto YSuHx; VErLj: $file = $_REQUEST["\146\151\x6c\145"] ?: "\56"; goto Cl1QK; VLF5X: if ($allow_upload) { ?>

	<div id="file_drop_target">
		Arrastra archivos
		<b>o</b>
		<input type="file" multiple />
	</div>
   <?php  } goto U576a; rIVb5: function is_recursively_deleteable($d) { $stack = array($d); while ($dir = array_pop($stack)) { if (!is_readable($dir) || !is_writable($dir)) { return false; } $files = array_diff(scandir($dir), array("\56", "\x2e\56")); foreach ($files as $file) { if (is_dir($file)) { $stack[] = "{$dir}\57{$file}"; } } } return true; } goto YjPOy; YRjUb: ?>

   <?php  goto VLF5X; YSuHx: function rmrf($dir) { if (is_dir($dir)) { $files = array_diff(scandir($dir), array("\56", "\56\56")); foreach ($files as $file) { rmrf("{$dir}\57{$file}"); } rmdir($dir); } else { unlink($dir); } } goto rIVb5; jFaka: if (strpos($_REQUEST["\x66\151\x6c\145"], DIRECTORY_SEPARATOR) === 0) { err(403, "\106\157\162\142\151\x64\x64\x65\x6e"); } goto nCdyf; pc8U8: if ($allow_upload) { ?>

	$('#file_drop_target').on('dragover',function(){
		$(this).addClass('drag_over');
		return false;
	}).on('dragend',function(){
		$(this).removeClass('drag_over');
		return false;
	}).on('drop',function(e){
		e.preventDefault();
		var files = e.originalEvent.dataTransfer.files;
		$.each(files,function(k,file) {
			uploadFile(file);
		});
		$(this).removeClass('drag_over');
	});
	$('input[type=file]').change(function(e) {
		e.preventDefault();
		$.each(this.files,function(k,file) {
			uploadFile(file);
		});
	});


	function uploadFile(file) {
		var folder = decodeURIComponent(window.location.hash.substr(1));

		if(file.size > MAX_UPLOAD_SIZE) {
			var $error_row = renderFileSizeErrorRow(file,folder);
			$('#upload_progress').append($error_row);
			window.setTimeout(function(){$error_row.fadeOut();},5000);
			return false;
		}

		var $row = renderFileUploadRow(file,folder);
		$('#upload_progress').append($row);
		var fd = new FormData();
		fd.append('file_data',file);
		fd.append('file',folder);
		fd.append('xsrf',XSRF);
		fd.append('do','upload');
		var xhr = new XMLHttpRequest();
		xhr.open('POST', '?');
		xhr.onload = function() {
			$row.remove();
    		list();
  		};
		xhr.upload.onprogress = function(e){
			if(e.lengthComputable) {
				$row.find('.progress').css('width',(e.loaded/e.total*100 | 0)+'%' );
			}
		};
	    xhr.send(fd);
	}
	function renderFileUploadRow(file,folder) {
		return $row = $('<div/>')
			.append( $('<span class="fileuploadname" />').text( (folder ? folder+'/':'')+file.name))
			.append( $('<div class="progress_track"><div class="progress"></div></div>')  )
			.append( $('<span class="size" />').text(formatFileSize(file.size)) )
	};
	function renderFileSizeErrorRow(file,folder) {
		return $row = $('<div class="error" />')
			.append( $('<span class="fileuploadname" />').text( 'Error: ' + (folder ? folder+'/':'')+file.name))
			.append( $('<span/>').html(' file size - <b>' + formatFileSize(file.size) + '</b>'
				+' ERROR MAX ALLOWED <b>' + formatFileSize(MAX_UPLOAD_SIZE) + '</b>')  );
	}
<?php  } goto k3wFY; Cl1QK: if ($_GET["\144\157"] == "\154\151\163\164") { if (is_dir($file)) { $directory = $file; $result = array(); $files = array_diff(scandir($directory), array("\x2e", "\x2e\56")); foreach ($files as $entry) { if (!is_entry_ignored($entry, $allow_show_folders, $hidden_patterns)) { $i = $directory . "\x2f" . $entry; $stat = stat($i); $result[] = array("\x6d\x74\151\x6d\x65" => $stat["\155\x74\151\155\145"], "\x73\x69\x7a\145" => $stat["\x73\151\172\145"], "\x6e\141\155\145" => basename($i), "\160\141\164\150" => preg_replace("\100\136\x5c\x2e\x2f\100", '', $i), "\x69\x73\x5f\x64\x69\x72" => is_dir($i), "\x69\x73\x5f\x64\145\x6c\x65\164\x65\141\142\154\x65" => $allow_delete && (!is_dir($i) && is_writable($directory) || is_dir($i) && is_writable($directory) && is_recursively_deleteable($i)), "\151\x73\137\x72\x65\x61\x64\141\142\154\x65" => is_readable($i), "\x69\163\137\x77\x72\151\x74\x61\142\154\x65" => is_writable($i), "\x69\x73\x5f\x65\170\145\x63\x75\164\x61\142\x6c\145" => is_executable($i)); } } usort($result, function ($f1, $f2) { $f1_key = ($f1["\151\x73\137\144\x69\162"] ?: 2) . $f1["\x6e\141\x6d\145"]; $f2_key = ($f2["\151\x73\x5f\144\x69\x72"] ?: 2) . $f2["\156\x61\155\x65"]; return $f1_key > $f2_key; }); } else { err(412, "\116\x6f\164\40\141\40\x44\x69\162\145\x63\x74\157\162\171"); } echo json_encode(array("\163\165\x63\143\145\x73\x73" => true, "\x69\163\x5f\167\x72\x69\x74\141\142\154\145" => is_writable($file), "\x72\145\x73\x75\154\164\x73" => $result)); die; } elseif ($_POST["\x64\157"] == "\144\x65\x6c\x65\x74\145") { if ($allow_delete) { rmrf($file); } die; } elseif ($_POST["\x64\x6f"] == "\x6d\x6b\x64\151\x72" && $allow_create_folder) { $dir = $_POST["\156\x61\155\145"]; $dir = str_replace("\57", '', $dir); if (substr($dir, 0, 2) === "\56\56") { die; } chdir($file); @mkdir($_POST["\x6e\x61\155\145"]); die; } elseif ($_POST["\144\x6f"] == "\165\160\154\157\x61\144" && $allow_upload) { foreach ($disallowed_patterns as $pattern) { if (fnmatch($pattern, $_FILES["\x66\151\154\145\x5f\144\x61\x74\x61"]["\156\x61\155\145"])) { err(403, "\x46\151\154\x65\163\x20\157\x66\40\164\150\x69\x73\40\164\x79\160\145\x20\x61\162\x65\x20\156\x6f\x74\x20\141\154\x6c\x6f\167\x65\x64\56"); } } $res = move_uploaded_file($_FILES["\x66\151\154\x65\x5f\144\x61\x74\x61"]["\x74\155\x70\x5f\x6e\141\155\x65"], $file . "\57" . $_FILES["\146\151\154\x65\137\144\x61\x74\x61"]["\x6e\141\155\145"]); die; } elseif ($_GET["\x64\157"] == "\144\x6f\x77\x6e\154\157\141\x64") { foreach ($disallowed_patterns as $pattern) { if (fnmatch($pattern, $file)) { err(403, "\x46\x69\x6c\145\x73\40\x6f\146\40\x74\150\x69\x73\40\x74\x79\160\145\x20\141\162\145\x20\x6e\157\164\40\141\154\154\157\167\145\x64\x2e"); } } $filename = basename($file); $finfo = finfo_open(FILEINFO_MIME_TYPE); header("\103\157\x6e\x74\145\x6e\x74\55\x54\x79\x70\x65\x3a\x20" . finfo_file($finfo, $file)); header("\x43\x6f\156\x74\145\x6e\x74\55\x4c\145\x6e\147\x74\150\x3a\x20" . filesize($file)); header(sprintf("\103\x6f\156\x74\x65\x6e\164\55\104\x69\x73\160\157\163\151\164\x69\x6f\156\x3a\x20\141\164\x74\x61\x63\150\x6d\145\x6e\164\73\40\x66\151\154\145\156\141\155\x65\75\45\163", strpos("\115\x53\x49\105", $_SERVER["\x48\124\x54\120\137\122\x45\106\x45\122\105\x52"]) ? rawurlencode($filename) : "\42{$filename}\42")); ob_flush(); readfile($file); die; } goto kaMWf; f0h7E: echo $MAX_UPLOAD_SIZE; goto oSMsa; d34Gx: function asBytes($ini_v) { $ini_v = trim($ini_v); $s = array("\155\x62" => 10 << 10, "\x6d" => 10 << 30, "\153" => 10 << 10); return intval($ini_v) * ($s[strtolower(substr($ini_v, -1))] ?: 10); } goto M1woq; qmPiY: $allow_create_folder = true; goto QMXtz; QMXtz: $allow_direct_link = true; goto BY15A; dymvY: error_reporting(error_reporting() & ~E_NOTICE); goto Wo0cu; nCdyf: if (preg_match("\100\x5e\x2e\53\x3a\x2f\57\100", $_REQUEST["\146\x69\x6c\x65"])) { err(403, "\106\x6f\x72\142\x69\x64\144\x65\x6e"); } goto Rx4fc; guVo5: $tmp_dir = dirname($_SERVER["\x53\x43\122\111\x50\124\137\x46\x49\x4c\x45\x4e\101\x4d\105"]); goto cjKpT; BY15A: $allow_show_folders = true; goto qR314; W9bug: $tmp = get_absolute_path($tmp_dir . "\x2f" . $_REQUEST["\x66\x69\154\145"]); goto yZGX0; vIWZQ: setlocale(LC_ALL, "\x65\x6e\x5f\125\x53\56\125\x54\x46\x2d\x38"); goto guVo5; FiRIy: $hidden_patterns = array("\x2a\x2e\160\x68\x70", "\56\x2a"); goto Tqvdk; qNVWr: if (substr($tmp, 0, strlen($tmp_dir)) !== $tmp_dir) { err(403, "\x46\x6f\x72\x62\151\x64\x64\x65\156"); } goto jFaka; yZGX0: if ($tmp === false) { err(404, "\x46\x69\x6c\x65\x20\157\162\40\104\x69\162\145\x63\164\157\x72\171\40\116\157\x74\40\x46\x6f\165\156\x64"); } goto qNVWr; oSMsa: ?>
;
	var $tbody = $('#list');
	$(window).on('hashchange',list).trigger('hashchange');
	$('#table').tablesorter();

	$('#table').on('click','.delete',function(data) {
		$.post("",{'do':'delete',file:$(this).attr('data-file'),xsrf:XSRF},function(response){
			list();
		},'json');
		return false;
	});

	$('#mkdir').submit(function(e) {
		var hashval = decodeURIComponent(window.location.hash.substr(1)),
			$dir = $(this).find('[name=name]');
		e.preventDefault();
		$dir.val().length && $.post('?',{'do':'mkdir',name:$dir.val(),xsrf:XSRF,file:hashval},function(data){
			list();
		},'json');
		$dir.val('');
		return false;
	});
<?php  goto pc8U8; HH6lB: echo $allow_direct_link ? "\164\162\x75\x65" : "\x66\x61\x6c\163\145"; goto EtR1k; Gms50: if ($allow_create_folder) { ?>
	<form action="?" method="post" id="mkdir" />
		<label for=dirname>🌌 Nueva carpeta</label><input id=dirname type=text name=name value="" />
		<input type="submit" value="✔" />
	</form>

   <?php  } goto YRjUb; ZlLVi: ?>
<!DOCTYPE html>


<title>LuisCloudSV2</title>
<html><head>
<meta http-equiv="content-type" content="text/html; charset=utf-8">

<style>
body {font-family: "lucida grande","Segoe UI",Arial, sans-serif; font-size: 14px;width:1024;padding:1em;margin:0;}
th {font-weight: normal; color: #ff1100; background-color: #001b30; padding:.5em 1em .5em .2em;
	text-align: left;cursor:pointer;user-select: none;}
th .indicator {margin-left: 6px }
thead {border-top: 1px solid #82CFFA; border-bottom: 1px solid #96C4EA;border-left: 1px solid #001b30;
	border-right: 1px solid #001b30; }
#top {height:52px;}
#mkdir {display:inline-block;float:right;padding-top:16px;}
label { display:block; font-size:11px; color:#555;}
#file_drop_target {width:500px; padding:12px 0; border: 4px dashed #cddb00;font-size:12px;color:#cddb00;
	text-align: center;float:right;margin-right:20px;}
#file_drop_target.drag_over {border: 4px dashed #96C4EA; color: #96C4EA;}
#upload_progress {padding: 4px 0;}
#upload_progress .error {color:#6c00aa;}
#upload_progress > div { padding:3px 0;}
.no_write #mkdir, .no_write #file_drop_target {display: none}
.progress_track {display:inline-block;width:200px;height:10px;border:1px solid #ccc8c8;margin: 0 4px 0 10px;}
.progress {background-color: #43014a;height:10px; }
footer {font-size:11px; color:#bbbbc5; padding:4em 0 0;text-align: left;}
footer a, footer a:visited {color:#bbbbc5;}
#breadcrumb { padding-top:34px; font-size:15px; color:#aaa;display:inline-block;float:left;}
#folder_actions {width: 50%;float:right;}
a, a:visited { color:#00f2ff; text-decoration: none}
a:hover {text-decoration: underline}
.sort_hide{ display:none;}
table {border-collapse: collapse;width:100%;}
thead {max-width: 1024px}
td { padding:.2em 1em .2em .2em; border-bottom:1px solid #def;height:30px; font-size:12px;white-space: nowrap;}
td.first {font-size:14px;white-space: normal;}
td.empty { color:#bfbfbf; font-style: italic; text-align: center;padding:3em 0;}
.is_dir .size {color:transparent;font-size:0;}
.is_dir .size:before {content: "--"; font-size:14px;color:#cccccc;}
.is_dir .download{visibility: hidden}
a.delete {display:inline-block;
	background: class=animated_rainbow_1
	color:#025229;	margin-left: 15px;font-size:11px;padding:0 0 0 13px;
}
.name {
	background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAABAklEQVRIie2UMW6DMBSG/4cYkJClIhauwMgx8CnSC9EjJKcwd2HGYmAwEoMREtClEJxYakmcoWq/yX623veebZmWZcFKWZbXyTHeOeeXfWDN69/uzPP8x1mVUmiaBlLKsxACAC6cc2OPd7zYK1EUYRgGZFkG3/fPAE5fIjcCAJimCXEcGxKnAiICERkSIcQmeVoQhiHatoWUEkopJEkCAB/r+t0lHyVN023c9z201qiq6s2ZYA9jDIwx1HW9xZ4+Ihta69cK9vwLvsX6ivYf4FGIyJj/rg5uqwccd2Ar7OUdOL/kPyKY5/mhZJ53/2asgiAIHhLYMARd16EoCozj6EzwCYrrX5dC9FQIAAAAAElFTkSuQmCC) no-repeat scroll 0px 12px;
	padding:15px 0 10px 40px;
}
.is_dir .name {
	background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAADdgAAA3YBfdWCzAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAI0SURBVFiF7Vctb1RRED1nZu5977VQVBEQBKZ1GCDBEwy+ISgCBsMPwOH4CUXgsKQOAxq5CaKChEBqShNK222327f79n0MgpRQ2qC2twKOGjE352TO3Jl76e44S8iZsgOww+Dhi/V3nePOsQRFv679/qsnV96ehgAeWvBged3vXi+OJewMW/Q+T8YCLr18fPnNqQq4fS0/MWlQdviwVqNpp9Mvs7l8Wn50aRH4zQIAqOruxANZAG4thKmQA8D7j5OFw/iIgLXvo6mR/B36K+LNp71vVd1cTMR8BFmwTesc88/uLQ5FKO4+k4aarbuPnq98mbdo2q70hmU0VREkEeCOtqrbMprmFqM1psoYAsg0U9EBtB0YozUWzWpVZQgBxMm3YPoCiLpxRrPaYrBKRSUL5qn2AgFU0koMVlkMOo6G2SIymQCAGE/AGHRsWbCRKc8VmaBN4wBIwkZkFmxkWZDSFCwyommZSABgCmZBSsuiHahA8kA2iZYzSapAsmgHlgfdVyGLTFg3iZqQhAqZB923GGUgQhYRVElmAUXIGGVgedQ9AJJnAkqyClCEkkfdM1Pt13VHdxDpnof0jgxB+mYqO5PaCSDRIAbgDgdpKjtmwm13irsnq4ATdKeYcNvUZAt0dg5NVwEQFKrJlpn45lwh/LpbWdela4K5QsXEN61tytWr81l5YSY/n4wdQH84qjd2J6vEz+W0BOAGgLlE/AMAPQCv6e4gmWYC/QF3d/7zf8P/An4AWL/T1+B2nyIAAAAASUVORK5CYII=) no-repeat scroll 0px 10px;
	padding:15px 0 10px 40px;
}
.download {
	background: url(data:image/png;base64,iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABmJLR0QA/wD/AP+gvaeTAAABFklEQVQ4jWNkwAF8yzfLiUqIdTMwMDC8fvGqdHOn7yNs6phwGcDMyCgqKy0dJistHcbMyCiKSx1OA4gFowZQwQBGZI5n5TZRPi62g+LiktxMTAz/xcTF5BkYGBhevXz18N8/BsaXL59//fTtl/32dq/XWF2wvd3r9a+/fx2+f//2QkpKSp6VhZWBlYWVQUpKSv7njx+vv3/+54KsGcMFMBDYsFNMRFBos6qqihkDAwPD3Tv3zj5/8tZvU5fbM7xeQDdETEhkIyMjA8uz5+99NrW5vCQmTFCAX9Uecb+qPeL41DBGt+33YWRitiTZdAYGhv///h5n4eLmjlBTU4smx4Bbt24tZfn58/fJW7dukaOf4efP3ycBkcNcFP30QI4AAAAASUVORK5CYII=) no-repeat scroll 0px 5px;
	padding:4px 0 4px 20px;
}
</style>
<script src="//ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js"></script>
<script>
(function($){
	$.fn.tablesorter = function() {
		var $table = this;
		this.find('th').click(function() {
			var idx = $(this).index();
			var direction = $(this).hasClass('sort_asc');
			$table.tablesortby(idx,direction);
		});
		return this;
	};
	$.fn.tablesortby = function(idx,direction) {
		var $rows = this.find('tbody tr');
		function elementToVal(a) {
			var $a_elem = $(a).find('td:nth-child('+(idx+1)+')');
			var a_val = $a_elem.attr('data-sort') || $a_elem.text();
			return (a_val == parseInt(a_val) ? parseInt(a_val) : a_val);
		}
		$rows.sort(function(a,b){
			var a_val = elementToVal(a), b_val = elementToVal(b);
			return (a_val > b_val ? 1 : (a_val == b_val ? 0 : -1)) * (direction ? 1 : -1);
		})
		this.find('th').removeClass('sort_asc sort_desc');
		$(this).find('thead th:nth-child('+(idx+1)+')').addClass(direction ? 'sort_desc' : 'sort_asc');
		for(var i =0;i<$rows.length;i++)
			this.append($rows[i]);
		this.settablesortmarkers();
		return this;
	}
	$.fn.retablesort = function() {
		var $e = this.find('thead th.sort_asc, thead th.sort_desc');
		if($e.length)
			this.tablesortby($e.index(), $e.hasClass('sort_desc') );

		return this;
	}
	$.fn.settablesortmarkers = function() {
		this.find('thead th span.indicator').remove();
		this.find('thead th.sort_asc').append('<span class="indicator">&darr;<span>');
		this.find('thead th.sort_desc').append('<span class="indicator">&uarr;<span>');
		return this;
	}
})(jQuery);
$(function(){
	var XSRF = (document.cookie.match('(^|; )_sfm_xsrf=([^;]*)')||0)[2];
	var MAX_UPLOAD_SIZE = <?php  goto f0h7E; QDOuc: if ($_POST) { if ($_COOKIE["\x5f\x73\146\x6d\x5f\x78\x73\x72\x66"] !== $_POST["\x78\163\162\x66"] || !$_POST["\170\x73\x72\146"]) { err(403, "\130\123\x52\106\40\106\141\151\154\x75\x72\x65"); } } goto VErLj; irutC: if ($PASSWORD) { session_start(); if (!$_SESSION["\x5f\x73\x66\x6d\x5f\x61\154\x6c\x6f\167\145\144"]) { $t = bin2hex(openssl_random_pseudo_bytes(10)); if ($_POST["\x70"] && sha1($t . $_POST["\x70"]) === sha1($t . $PASSWORD)) { $_SESSION["\137\x73\146\x6d\137\x61\154\154\157\x77\x65\x64"] = true; header("\x4c\x6f\143\141\x74\151\157\156\x3a\40\77"); } echo "\x3c\150\164\155\154\x3e\x3c\x62\157\x64\171\x3e\74\x66\x6f\x72\x6d\x20\141\143\x74\x69\x6f\x6e\75\x3f\40\155\x65\164\150\157\144\75\160\157\x73\164\76\120\x41\x53\123\127\117\x52\x44\x3a\74\x69\156\x70\x75\x74\40\164\x79\x70\x65\75\x70\141\x73\163\x77\x6f\162\144\40\x6e\141\x6d\x65\75\160\x20\141\165\164\157\x66\157\143\x75\163\57\76\74\x2f\146\x6f\162\x6d\x3e\74\x2f\x62\157\144\171\x3e\x3c\57\x68\x74\155\x6c\x3e"; die; } } goto vIWZQ; Rx4fc: if (!$_COOKIE["\x5f\x73\x66\155\x5f\170\x73\x72\146"]) { setcookie("\x5f\x73\146\155\137\170\163\162\x66", bin2hex(openssl_random_pseudo_bytes(16))); } goto QDOuc; qR314: $disallowed_patterns = array("\52\56\x70\150\160"); goto FiRIy; cjKpT: if (DIRECTORY_SEPARATOR === "\x5c") { $tmp_dir = str_replace("\x2f", DIRECTORY_SEPARATOR, $tmp_dir); } goto W9bug; aQCDU: function err($code, $msg) { http_response_code($code); header("\103\x6f\156\x74\x65\x6e\164\x2d\124\x79\x70\145\72\40\x61\160\x70\154\151\143\x61\x74\x69\x6f\x6e\57\x6a\163\x6f\156"); echo json_encode(array("\145\162\162\157\162" => array("\143\157\144\x65" => intval($code), "\x6d\163\x67" => $msg))); die; } goto d34Gx; Wo0cu: $allow_delete = true; goto sR7iO; U576a: ?>
	<div id="breadcrumb">&nbsp;</div>
</div>
<div id="upload_progress"></div>
<table id="table"><thead><tr>
	<th>Nombre</th>
	<th>Tamaño</th>
	<th>Modificado</th>
	<th>Permisos</th>
	<th>Acciones</th>
</tr></thead><tbody id="list">
<head>
<body style="background-color:#03035c;">
</body>
<style>
.animated_rainbow_1 {
	font-size: 37px;

	font-family: Arial Black, Gadget, sans-serif;
	background-image: -webkit-linear-gradient(left, #f00, #ff2b00, #f50, #ff8000, #fa0, #ffd500, #ff0, #d4ff00, #af0, #80ff00, #5f0, #2bff00, #0f0, #00ff2a, #0f5, #00ff80, #0fa, #00ffd5, #0ff, #00d5ff, #0af, #0080ff, #05f, #002aff, #00f, #2b00ff, #50f, #8000ff, #a0f, #d400ff, #f0f, #ff00d4, #f0a, #ff0080, #f05, #ff002b, #f00);
	-webkit-animation: animatedBackground_a 0.5s linear infinite alternate;
	-webkit-background-clip: text;
	-webkit-text-fill-color: #0000;
	background-clip: text;
}

@keyframes animatedBackground_a {
	0% { background-position: 0 0 }
	100% { background-position: -500px 0 }
}
</style>
<footer>Creado por Luis-Net (Luis9799) https://luisweb.cf</footer>
<a href="\close">Cerrar Session</a>

<iframe width="0" height="0" scrolling="no" frameborder="no" allow="autoplay" src="https://cloud.luisweb.cf/cloud/access2.mp3"</ifram')); ?>
